// koffee 1.4.0

/*
 0000000  00000000   000   000  00     00  0000000  
000       000   000  000   000  000   000  000   000
000       0000000    000   000  000000000  0000000  
000       000   000  000   000  000 0 000  000   000
 0000000  000   000   0000000   000   000  0000000
 */
var $, Crumb, File, elem, klog, kpos, ref, slash,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('kxk'), slash = ref.slash, elem = ref.elem, kpos = ref.kpos, klog = ref.klog, $ = ref.$;

File = require('./tools/file');

Crumb = (function() {
    function Crumb(column) {
        this.column = column;
        this.onMouseUp = bind(this.onMouseUp, this);
        this.onMouseDown = bind(this.onMouseDown, this);
        this.elem = elem({
            "class": 'crumb'
        });
        this.elem.columnIndex = this.column.index;
        this.elem.addEventListener('mousedown', this.onMouseDown);
        this.elem.addEventListener('mouseup', this.onMouseUp);
        $('crumbs').appendChild(this.elem);
    }

    Crumb.prototype.onMouseDown = function(event) {
        return this.downPos = kpos(window.win.getBounds());
    };

    Crumb.prototype.onMouseUp = function(event) {
        var br, root, upPos;
        upPos = kpos(window.win.getBounds());
        if (upPos.to(this.downPos).length() > 0) {
            return;
        }
        if (this.column.index === 0) {
            if (event.target.id) {
                return this.column.browser.browse(event.target.id);
            } else {
                root = this.elem.firstChild;
                br = root.getBoundingClientRect();
                if (kpos(event).x < br.left) {
                    return this.column.browser.browse(root.id);
                } else {
                    return this.column.browser.browse(this.column.parent.file);
                }
            }
        } else {
            return this.column.makeRoot();
        }
    };

    Crumb.prototype.setFile = function(file) {
        if (this.column.index === 0) {
            return this.elem.innerHTML = File.crumbSpan(slash.tilde(file));
        } else {
            return this.elem.innerHTML = slash.base(file);
        }
    };

    Crumb.prototype.clear = function() {
        return this.elem.innerHTML = '';
    };

    Crumb.prototype.updateRect = function(br) {
        var width;
        this.elem.style.left = br.left + "px";
        if (this.column.index === this.column.browser.numCols() - 1) {
            width = br.right - br.left - 135;
            this.elem.style.width = width + "px";
            if (width < 50) {
                return this.elem.style.display = 'none';
            } else {
                return this.elem.style.display = null;
            }
        } else {
            return this.elem.style.width = (br.right - br.left) + "px";
        }
    };

    return Crumb;

})();

module.exports = Crumb;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J1bWIuanMiLCJzb3VyY2VSb290IjoiLiIsInNvdXJjZXMiOlsiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7QUFBQSxJQUFBLDRDQUFBO0lBQUE7O0FBUUEsTUFBaUMsT0FBQSxDQUFRLEtBQVIsQ0FBakMsRUFBRSxpQkFBRixFQUFTLGVBQVQsRUFBZSxlQUFmLEVBQXFCLGVBQXJCLEVBQTJCOztBQUUzQixJQUFBLEdBQU8sT0FBQSxDQUFRLGNBQVI7O0FBRUQ7SUFFQyxlQUFDLE1BQUQ7UUFBQyxJQUFDLENBQUEsU0FBRDs7O1FBRUEsSUFBQyxDQUFBLElBQUQsR0FBUSxJQUFBLENBQUs7WUFBQSxDQUFBLEtBQUEsQ0FBQSxFQUFNLE9BQU47U0FBTDtRQUNSLElBQUMsQ0FBQSxJQUFJLENBQUMsV0FBTixHQUFvQixJQUFDLENBQUEsTUFBTSxDQUFDO1FBQzVCLElBQUMsQ0FBQSxJQUFJLENBQUMsZ0JBQU4sQ0FBdUIsV0FBdkIsRUFBbUMsSUFBQyxDQUFBLFdBQXBDO1FBQ0EsSUFBQyxDQUFBLElBQUksQ0FBQyxnQkFBTixDQUF1QixTQUF2QixFQUFpQyxJQUFDLENBQUEsU0FBbEM7UUFDQSxDQUFBLENBQUUsUUFBRixDQUFXLENBQUMsV0FBWixDQUF3QixJQUFDLENBQUEsSUFBekI7SUFORDs7b0JBUUgsV0FBQSxHQUFhLFNBQUMsS0FBRDtlQUVULElBQUMsQ0FBQSxPQUFELEdBQVcsSUFBQSxDQUFLLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBWCxDQUFBLENBQUw7SUFGRjs7b0JBSWIsU0FBQSxHQUFXLFNBQUMsS0FBRDtBQUVQLFlBQUE7UUFBQSxLQUFBLEdBQVEsSUFBQSxDQUFLLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBWCxDQUFBLENBQUw7UUFFUixJQUFVLEtBQUssQ0FBQyxFQUFOLENBQVMsSUFBQyxDQUFBLE9BQVYsQ0FBa0IsQ0FBQyxNQUFuQixDQUFBLENBQUEsR0FBOEIsQ0FBeEM7QUFBQSxtQkFBQTs7UUFFQSxJQUFHLElBQUMsQ0FBQSxNQUFNLENBQUMsS0FBUixLQUFpQixDQUFwQjtZQUNJLElBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFoQjt1QkFDSSxJQUFDLENBQUEsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFoQixDQUF1QixLQUFLLENBQUMsTUFBTSxDQUFDLEVBQXBDLEVBREo7YUFBQSxNQUFBO2dCQUdJLElBQUEsR0FBTyxJQUFDLENBQUEsSUFBSSxDQUFDO2dCQUNiLEVBQUEsR0FBSyxJQUFJLENBQUMscUJBQUwsQ0FBQTtnQkFDTCxJQUFHLElBQUEsQ0FBSyxLQUFMLENBQVcsQ0FBQyxDQUFaLEdBQWdCLEVBQUUsQ0FBQyxJQUF0QjsyQkFDSSxJQUFDLENBQUEsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFoQixDQUF1QixJQUFJLENBQUMsRUFBNUIsRUFESjtpQkFBQSxNQUFBOzJCQUdJLElBQUMsQ0FBQSxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQWhCLENBQXVCLElBQUMsQ0FBQSxNQUFNLENBQUMsTUFBTSxDQUFDLElBQXRDLEVBSEo7aUJBTEo7YUFESjtTQUFBLE1BQUE7bUJBV0ksSUFBQyxDQUFBLE1BQU0sQ0FBQyxRQUFSLENBQUEsRUFYSjs7SUFOTzs7b0JBbUJYLE9BQUEsR0FBUyxTQUFDLElBQUQ7UUFFTCxJQUFHLElBQUMsQ0FBQSxNQUFNLENBQUMsS0FBUixLQUFpQixDQUFwQjttQkFDSSxJQUFDLENBQUEsSUFBSSxDQUFDLFNBQU4sR0FBa0IsSUFBSSxDQUFDLFNBQUwsQ0FBZSxLQUFLLENBQUMsS0FBTixDQUFZLElBQVosQ0FBZixFQUR0QjtTQUFBLE1BQUE7bUJBR0ksSUFBQyxDQUFBLElBQUksQ0FBQyxTQUFOLEdBQWtCLEtBQUssQ0FBQyxJQUFOLENBQVcsSUFBWCxFQUh0Qjs7SUFGSzs7b0JBT1QsS0FBQSxHQUFPLFNBQUE7ZUFBRyxJQUFDLENBQUEsSUFBSSxDQUFDLFNBQU4sR0FBa0I7SUFBckI7O29CQUVQLFVBQUEsR0FBWSxTQUFDLEVBQUQ7QUFFUixZQUFBO1FBQUEsSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBWixHQUFzQixFQUFFLENBQUMsSUFBSixHQUFTO1FBQzlCLElBQUcsSUFBQyxDQUFBLE1BQU0sQ0FBQyxLQUFSLEtBQWlCLElBQUMsQ0FBQSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWhCLENBQUEsQ0FBQSxHQUEwQixDQUE5QztZQUNJLEtBQUEsR0FBUSxFQUFFLENBQUMsS0FBSCxHQUFXLEVBQUUsQ0FBQyxJQUFkLEdBQXFCO1lBQzdCLElBQUMsQ0FBQSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQVosR0FBdUIsS0FBRCxHQUFPO1lBQzdCLElBQUcsS0FBQSxHQUFRLEVBQVg7dUJBQ0ksSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBWixHQUFzQixPQUQxQjthQUFBLE1BQUE7dUJBR0ksSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBWixHQUFzQixLQUgxQjthQUhKO1NBQUEsTUFBQTttQkFRSSxJQUFDLENBQUEsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFaLEdBQXNCLENBQUMsRUFBRSxDQUFDLEtBQUgsR0FBVyxFQUFFLENBQUMsSUFBZixDQUFBLEdBQW9CLEtBUjlDOztJQUhROzs7Ozs7QUFhaEIsTUFBTSxDQUFDLE9BQVAsR0FBaUIiLCJzb3VyY2VzQ29udGVudCI6WyIjIyNcbiAwMDAwMDAwICAwMDAwMDAwMCAgIDAwMCAgIDAwMCAgMDAgICAgIDAwICAwMDAwMDAwICBcbjAwMCAgICAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDBcbjAwMCAgICAgICAwMDAwMDAwICAgIDAwMCAgIDAwMCAgMDAwMDAwMDAwICAwMDAwMDAwICBcbjAwMCAgICAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwIDAgMDAwICAwMDAgICAwMDBcbiAwMDAwMDAwICAwMDAgICAwMDAgICAwMDAwMDAwICAgMDAwICAgMDAwICAwMDAwMDAwICBcbiMjI1xuXG57IHNsYXNoLCBlbGVtLCBrcG9zLCBrbG9nLCAkIH0gPSByZXF1aXJlICdreGsnXG5cbkZpbGUgPSByZXF1aXJlICcuL3Rvb2xzL2ZpbGUnXG5cbmNsYXNzIENydW1iXG5cbiAgICBAOiAoQGNvbHVtbikgLT5cbiAgICAgICAgXG4gICAgICAgIEBlbGVtID0gZWxlbSBjbGFzczonY3J1bWInXG4gICAgICAgIEBlbGVtLmNvbHVtbkluZGV4ID0gQGNvbHVtbi5pbmRleFxuICAgICAgICBAZWxlbS5hZGRFdmVudExpc3RlbmVyICdtb3VzZWRvd24nIEBvbk1vdXNlRG93blxuICAgICAgICBAZWxlbS5hZGRFdmVudExpc3RlbmVyICdtb3VzZXVwJyBAb25Nb3VzZVVwXG4gICAgICAgICQoJ2NydW1icycpLmFwcGVuZENoaWxkIEBlbGVtXG5cbiAgICBvbk1vdXNlRG93bjogKGV2ZW50KSA9PlxuICAgICAgICBcbiAgICAgICAgQGRvd25Qb3MgPSBrcG9zIHdpbmRvdy53aW4uZ2V0Qm91bmRzKClcbiAgICAgICAgICAgIFxuICAgIG9uTW91c2VVcDogKGV2ZW50KSA9PlxuICAgICAgICBcbiAgICAgICAgdXBQb3MgPSBrcG9zIHdpbmRvdy53aW4uZ2V0Qm91bmRzKClcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBpZiB1cFBvcy50byhAZG93blBvcykubGVuZ3RoKCkgPiAwXG4gICAgICAgIFxuICAgICAgICBpZiBAY29sdW1uLmluZGV4ID09IDBcbiAgICAgICAgICAgIGlmIGV2ZW50LnRhcmdldC5pZFxuICAgICAgICAgICAgICAgIEBjb2x1bW4uYnJvd3Nlci5icm93c2UgZXZlbnQudGFyZ2V0LmlkXG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgcm9vdCA9IEBlbGVtLmZpcnN0Q2hpbGRcbiAgICAgICAgICAgICAgICBiciA9IHJvb3QuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgICAgICAgICAgICAgICBpZiBrcG9zKGV2ZW50KS54IDwgYnIubGVmdFxuICAgICAgICAgICAgICAgICAgICBAY29sdW1uLmJyb3dzZXIuYnJvd3NlIHJvb3QuaWRcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIEBjb2x1bW4uYnJvd3Nlci5icm93c2UgQGNvbHVtbi5wYXJlbnQuZmlsZVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBAY29sdW1uLm1ha2VSb290KClcbiAgICAgICAgXG4gICAgc2V0RmlsZTogKGZpbGUpIC0+XG4gICAgICAgIFxuICAgICAgICBpZiBAY29sdW1uLmluZGV4ID09IDBcbiAgICAgICAgICAgIEBlbGVtLmlubmVySFRNTCA9IEZpbGUuY3J1bWJTcGFuIHNsYXNoLnRpbGRlIGZpbGVcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgQGVsZW0uaW5uZXJIVE1MID0gc2xhc2guYmFzZSBmaWxlXG4gICAgICAgIFxuICAgIGNsZWFyOiAtPiBAZWxlbS5pbm5lckhUTUwgPSAnJ1xuICAgIFxuICAgIHVwZGF0ZVJlY3Q6IChicikgLT5cbiAgICAgICAgXG4gICAgICAgIEBlbGVtLnN0eWxlLmxlZnQgPSBcIiN7YnIubGVmdH1weFwiXG4gICAgICAgIGlmIEBjb2x1bW4uaW5kZXggPT0gQGNvbHVtbi5icm93c2VyLm51bUNvbHMoKS0xXG4gICAgICAgICAgICB3aWR0aCA9IGJyLnJpZ2h0IC0gYnIubGVmdCAtIDEzNVxuICAgICAgICAgICAgQGVsZW0uc3R5bGUud2lkdGggPSBcIiN7d2lkdGh9cHhcIlxuICAgICAgICAgICAgaWYgd2lkdGggPCA1MFxuICAgICAgICAgICAgICAgIEBlbGVtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBAZWxlbS5zdHlsZS5kaXNwbGF5ID0gbnVsbFxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBAZWxlbS5zdHlsZS53aWR0aCA9IFwiI3tici5yaWdodCAtIGJyLmxlZnR9cHhcIlxuICAgICAgICBcbm1vZHVsZS5leHBvcnRzID0gQ3J1bWJcbiJdfQ==
//# sourceURL=../coffee/crumb.coffee
// koffee 1.4.0

/*
 0000000  00000000   000   000  00     00  0000000  
000       000   000  000   000  000   000  000   000
000       0000000    000   000  000000000  0000000  
000       000   000  000   000  000 0 000  000   000
 0000000  000   000   0000000   000   000  0000000
 */
var $, Crumb, File, elem, klog, kpos, ref, slash,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('kxk'), slash = ref.slash, elem = ref.elem, kpos = ref.kpos, klog = ref.klog, $ = ref.$;

File = require('./tools/file');

Crumb = (function() {
    function Crumb(column) {
        this.column = column;
        this.onMouseUp = bind(this.onMouseUp, this);
        this.onMouseDown = bind(this.onMouseDown, this);
        this.elem = elem({
            "class": 'crumb'
        });
        this.elem.columnIndex = this.column.index;
        this.elem.addEventListener('mousedown', this.onMouseDown);
        this.elem.addEventListener('mouseup', this.onMouseUp);
        $('crumbs').appendChild(this.elem);
    }

    Crumb.prototype.onMouseDown = function(event) {
        return this.downPos = kpos(window.win.getBounds());
    };

    Crumb.prototype.onMouseUp = function(event) {
        var br, root, upPos;
        if (!this.downPos) {
            return;
        }
        upPos = kpos(window.win.getBounds());
        if (upPos.to(this.downPos).length() > 0) {
            delete this.downPos;
            this.column.focus();
            return;
        }
        if (this.column.index === 0) {
            if (event.target.id) {
                this.column.browser.browse(event.target.id);
            } else {
                root = this.elem.firstChild;
                br = root.getBoundingClientRect();
                if (kpos(event).x < br.left) {
                    this.column.browser.browse(root.id);
                } else {
                    this.column.browser.browse(this.column.parent.file);
                }
            }
        } else {
            this.column.makeRoot();
        }
        return delete this.downPos;
    };

    Crumb.prototype.setFile = function(file) {
        if (this.column.index === 0) {
            return this.elem.innerHTML = File.crumbSpan(slash.tilde(file));
        } else {
            return this.elem.innerHTML = slash.base(file);
        }
    };

    Crumb.prototype.clear = function() {
        return this.elem.innerHTML = '';
    };

    Crumb.prototype.updateRect = function(br) {
        this.elem.style.left = br.left + "px";
        return this.elem.style.width = (br.right - br.left) + "px";
    };

    return Crumb;

})();

module.exports = Crumb;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J1bWIuanMiLCJzb3VyY2VSb290IjoiLiIsInNvdXJjZXMiOlsiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7QUFBQSxJQUFBLDRDQUFBO0lBQUE7O0FBUUEsTUFBaUMsT0FBQSxDQUFRLEtBQVIsQ0FBakMsRUFBRSxpQkFBRixFQUFTLGVBQVQsRUFBZSxlQUFmLEVBQXFCLGVBQXJCLEVBQTJCOztBQUUzQixJQUFBLEdBQU8sT0FBQSxDQUFRLGNBQVI7O0FBRUQ7SUFFQyxlQUFDLE1BQUQ7UUFBQyxJQUFDLENBQUEsU0FBRDs7O1FBRUEsSUFBQyxDQUFBLElBQUQsR0FBUSxJQUFBLENBQUs7WUFBQSxDQUFBLEtBQUEsQ0FBQSxFQUFNLE9BQU47U0FBTDtRQUNSLElBQUMsQ0FBQSxJQUFJLENBQUMsV0FBTixHQUFvQixJQUFDLENBQUEsTUFBTSxDQUFDO1FBQzVCLElBQUMsQ0FBQSxJQUFJLENBQUMsZ0JBQU4sQ0FBdUIsV0FBdkIsRUFBbUMsSUFBQyxDQUFBLFdBQXBDO1FBQ0EsSUFBQyxDQUFBLElBQUksQ0FBQyxnQkFBTixDQUF1QixTQUF2QixFQUFtQyxJQUFDLENBQUEsU0FBcEM7UUFDQSxDQUFBLENBQUUsUUFBRixDQUFXLENBQUMsV0FBWixDQUF3QixJQUFDLENBQUEsSUFBekI7SUFORDs7b0JBUUgsV0FBQSxHQUFhLFNBQUMsS0FBRDtlQUVULElBQUMsQ0FBQSxPQUFELEdBQVcsSUFBQSxDQUFLLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBWCxDQUFBLENBQUw7SUFGRjs7b0JBSWIsU0FBQSxHQUFXLFNBQUMsS0FBRDtBQUVQLFlBQUE7UUFBQSxJQUFVLENBQUksSUFBQyxDQUFBLE9BQWY7QUFBQSxtQkFBQTs7UUFFQSxLQUFBLEdBQVEsSUFBQSxDQUFLLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBWCxDQUFBLENBQUw7UUFFUixJQUFHLEtBQUssQ0FBQyxFQUFOLENBQVMsSUFBQyxDQUFBLE9BQVYsQ0FBa0IsQ0FBQyxNQUFuQixDQUFBLENBQUEsR0FBOEIsQ0FBakM7WUFDSSxPQUFPLElBQUMsQ0FBQTtZQUNSLElBQUMsQ0FBQSxNQUFNLENBQUMsS0FBUixDQUFBO0FBQ0EsbUJBSEo7O1FBS0EsSUFBRyxJQUFDLENBQUEsTUFBTSxDQUFDLEtBQVIsS0FBaUIsQ0FBcEI7WUFDSSxJQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBaEI7Z0JBQ0ksSUFBQyxDQUFBLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBaEIsQ0FBdUIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFwQyxFQURKO2FBQUEsTUFBQTtnQkFHSSxJQUFBLEdBQU8sSUFBQyxDQUFBLElBQUksQ0FBQztnQkFDYixFQUFBLEdBQUssSUFBSSxDQUFDLHFCQUFMLENBQUE7Z0JBQ0wsSUFBRyxJQUFBLENBQUssS0FBTCxDQUFXLENBQUMsQ0FBWixHQUFnQixFQUFFLENBQUMsSUFBdEI7b0JBQ0ksSUFBQyxDQUFBLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBaEIsQ0FBdUIsSUFBSSxDQUFDLEVBQTVCLEVBREo7aUJBQUEsTUFBQTtvQkFHSSxJQUFDLENBQUEsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFoQixDQUF1QixJQUFDLENBQUEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUF0QyxFQUhKO2lCQUxKO2FBREo7U0FBQSxNQUFBO1lBV0ksSUFBQyxDQUFBLE1BQU0sQ0FBQyxRQUFSLENBQUEsRUFYSjs7ZUFhQSxPQUFPLElBQUMsQ0FBQTtJQXhCRDs7b0JBMEJYLE9BQUEsR0FBUyxTQUFDLElBQUQ7UUFFTCxJQUFHLElBQUMsQ0FBQSxNQUFNLENBQUMsS0FBUixLQUFpQixDQUFwQjttQkFDSSxJQUFDLENBQUEsSUFBSSxDQUFDLFNBQU4sR0FBa0IsSUFBSSxDQUFDLFNBQUwsQ0FBZSxLQUFLLENBQUMsS0FBTixDQUFZLElBQVosQ0FBZixFQUR0QjtTQUFBLE1BQUE7bUJBR0ksSUFBQyxDQUFBLElBQUksQ0FBQyxTQUFOLEdBQWtCLEtBQUssQ0FBQyxJQUFOLENBQVcsSUFBWCxFQUh0Qjs7SUFGSzs7b0JBT1QsS0FBQSxHQUFPLFNBQUE7ZUFBRyxJQUFDLENBQUEsSUFBSSxDQUFDLFNBQU4sR0FBa0I7SUFBckI7O29CQUVQLFVBQUEsR0FBWSxTQUFDLEVBQUQ7UUFFUixJQUFDLENBQUEsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFaLEdBQXNCLEVBQUUsQ0FBQyxJQUFKLEdBQVM7ZUFDOUIsSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBWixHQUFzQixDQUFDLEVBQUUsQ0FBQyxLQUFILEdBQVcsRUFBRSxDQUFDLElBQWYsQ0FBQSxHQUFvQjtJQUhsQzs7Ozs7O0FBS2hCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiIyMjXG4gMDAwMDAwMCAgMDAwMDAwMDAgICAwMDAgICAwMDAgIDAwICAgICAwMCAgMDAwMDAwMCAgXG4wMDAgICAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwXG4wMDAgICAgICAgMDAwMDAwMCAgICAwMDAgICAwMDAgIDAwMDAwMDAwMCAgMDAwMDAwMCAgXG4wMDAgICAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAwIDAwMCAgMDAwICAgMDAwXG4gMDAwMDAwMCAgMDAwICAgMDAwICAgMDAwMDAwMCAgIDAwMCAgIDAwMCAgMDAwMDAwMCAgXG4jIyNcblxueyBzbGFzaCwgZWxlbSwga3Bvcywga2xvZywgJCB9ID0gcmVxdWlyZSAna3hrJ1xuXG5GaWxlID0gcmVxdWlyZSAnLi90b29scy9maWxlJ1xuXG5jbGFzcyBDcnVtYlxuXG4gICAgQDogKEBjb2x1bW4pIC0+XG4gICAgICAgIFxuICAgICAgICBAZWxlbSA9IGVsZW0gY2xhc3M6J2NydW1iJ1xuICAgICAgICBAZWxlbS5jb2x1bW5JbmRleCA9IEBjb2x1bW4uaW5kZXhcbiAgICAgICAgQGVsZW0uYWRkRXZlbnRMaXN0ZW5lciAnbW91c2Vkb3duJyBAb25Nb3VzZURvd25cbiAgICAgICAgQGVsZW0uYWRkRXZlbnRMaXN0ZW5lciAnbW91c2V1cCcgICBAb25Nb3VzZVVwXG4gICAgICAgICQoJ2NydW1icycpLmFwcGVuZENoaWxkIEBlbGVtXG5cbiAgICBvbk1vdXNlRG93bjogKGV2ZW50KSA9PlxuICAgICAgICBcbiAgICAgICAgQGRvd25Qb3MgPSBrcG9zIHdpbmRvdy53aW4uZ2V0Qm91bmRzKClcbiAgICAgICAgICAgIFxuICAgIG9uTW91c2VVcDogKGV2ZW50KSA9PlxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGlmIG5vdCBAZG93blBvc1xuICAgICAgICBcbiAgICAgICAgdXBQb3MgPSBrcG9zIHdpbmRvdy53aW4uZ2V0Qm91bmRzKClcbiAgICAgICAgXG4gICAgICAgIGlmIHVwUG9zLnRvKEBkb3duUG9zKS5sZW5ndGgoKSA+IDBcbiAgICAgICAgICAgIGRlbGV0ZSBAZG93blBvc1xuICAgICAgICAgICAgQGNvbHVtbi5mb2N1cygpXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgXG4gICAgICAgIGlmIEBjb2x1bW4uaW5kZXggPT0gMFxuICAgICAgICAgICAgaWYgZXZlbnQudGFyZ2V0LmlkXG4gICAgICAgICAgICAgICAgQGNvbHVtbi5icm93c2VyLmJyb3dzZSBldmVudC50YXJnZXQuaWRcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICByb290ID0gQGVsZW0uZmlyc3RDaGlsZFxuICAgICAgICAgICAgICAgIGJyID0gcm9vdC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgICAgICAgICAgICAgIGlmIGtwb3MoZXZlbnQpLnggPCBici5sZWZ0XG4gICAgICAgICAgICAgICAgICAgIEBjb2x1bW4uYnJvd3Nlci5icm93c2Ugcm9vdC5pZFxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgQGNvbHVtbi5icm93c2VyLmJyb3dzZSBAY29sdW1uLnBhcmVudC5maWxlXG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIEBjb2x1bW4ubWFrZVJvb3QoKVxuICAgICAgICAgICAgXG4gICAgICAgIGRlbGV0ZSBAZG93blBvc1xuICAgICAgICBcbiAgICBzZXRGaWxlOiAoZmlsZSkgLT5cbiAgICAgICAgXG4gICAgICAgIGlmIEBjb2x1bW4uaW5kZXggPT0gMFxuICAgICAgICAgICAgQGVsZW0uaW5uZXJIVE1MID0gRmlsZS5jcnVtYlNwYW4gc2xhc2gudGlsZGUgZmlsZVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBAZWxlbS5pbm5lckhUTUwgPSBzbGFzaC5iYXNlIGZpbGVcbiAgICAgICAgXG4gICAgY2xlYXI6IC0+IEBlbGVtLmlubmVySFRNTCA9ICcnXG4gICAgXG4gICAgdXBkYXRlUmVjdDogKGJyKSAtPlxuICAgICAgICBcbiAgICAgICAgQGVsZW0uc3R5bGUubGVmdCA9IFwiI3tici5sZWZ0fXB4XCJcbiAgICAgICAgQGVsZW0uc3R5bGUud2lkdGggPSBcIiN7YnIucmlnaHQgLSBici5sZWZ0fXB4XCJcbiAgICAgICAgXG5tb2R1bGUuZXhwb3J0cyA9IENydW1iXG4iXX0=
//# sourceURL=../coffee/crumb.coffee
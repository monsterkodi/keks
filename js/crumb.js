// koffee 1.4.0

/*
 0000000  00000000   000   000  00     00  0000000  
000       000   000  000   000  000   000  000   000
000       0000000    000   000  000000000  0000000  
000       000   000  000   000  000 0 000  000   000
 0000000  000   000   0000000   000   000  0000000
 */
var $, Crumb, File, elem, klog, ref, slash,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('kxk'), slash = ref.slash, elem = ref.elem, klog = ref.klog, $ = ref.$;

File = require('./tools/file');

Crumb = (function() {
    function Crumb(column) {
        this.column = column;
        this.onClick = bind(this.onClick, this);
        this.elem = elem({
            "class": 'crumb'
        });
        this.elem.columnIndex = this.column.index;
        this.elem.addEventListener('click', this.onClick);
        $('crumbs').appendChild(this.elem);
    }

    Crumb.prototype.onClick = function(event) {
        if (this.column.index === 0) {
            if (event.target.id) {
                return this.column.browser.browse(event.target.id);
            } else {
                return this.column.browser.browse(this.column.parent.file);
            }
        } else {
            return this.column.makeRoot();
        }
    };

    Crumb.prototype.setFile = function(file) {
        if (this.column.index === 0) {
            return this.elem.innerHTML = File.crumbSpan(slash.tilde(file));
        } else {
            return this.elem.innerHTML = slash.base(file);
        }
    };

    Crumb.prototype.clear = function() {
        return this.elem.innerHTML = '';
    };

    Crumb.prototype.updateRect = function(br) {
        var width;
        this.elem.style.left = br.left + "px";
        if (this.column.index === this.column.browser.numCols() - 1) {
            width = br.right - br.left - 135;
            this.elem.style.width = width + "px";
            if (width < 50) {
                return this.elem.style.display = 'none';
            } else {
                return this.elem.style.display = null;
            }
        } else {
            return this.elem.style.width = (br.right - br.left) + "px";
        }
    };

    return Crumb;

})();

module.exports = Crumb;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J1bWIuanMiLCJzb3VyY2VSb290IjoiLiIsInNvdXJjZXMiOlsiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7QUFBQSxJQUFBLHNDQUFBO0lBQUE7O0FBUUEsTUFBMkIsT0FBQSxDQUFRLEtBQVIsQ0FBM0IsRUFBRSxpQkFBRixFQUFTLGVBQVQsRUFBZSxlQUFmLEVBQXFCOztBQUVyQixJQUFBLEdBQU8sT0FBQSxDQUFRLGNBQVI7O0FBRUQ7SUFFQyxlQUFDLE1BQUQ7UUFBQyxJQUFDLENBQUEsU0FBRDs7UUFFQSxJQUFDLENBQUEsSUFBRCxHQUFRLElBQUEsQ0FBSztZQUFBLENBQUEsS0FBQSxDQUFBLEVBQU0sT0FBTjtTQUFMO1FBQ1IsSUFBQyxDQUFBLElBQUksQ0FBQyxXQUFOLEdBQW9CLElBQUMsQ0FBQSxNQUFNLENBQUM7UUFDNUIsSUFBQyxDQUFBLElBQUksQ0FBQyxnQkFBTixDQUF1QixPQUF2QixFQUErQixJQUFDLENBQUEsT0FBaEM7UUFDQSxDQUFBLENBQUUsUUFBRixDQUFXLENBQUMsV0FBWixDQUF3QixJQUFDLENBQUEsSUFBekI7SUFMRDs7b0JBT0gsT0FBQSxHQUFTLFNBQUMsS0FBRDtRQUVMLElBQUcsSUFBQyxDQUFBLE1BQU0sQ0FBQyxLQUFSLEtBQWlCLENBQXBCO1lBQ0ksSUFBRyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQWhCO3VCQUNJLElBQUMsQ0FBQSxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQWhCLENBQXVCLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBcEMsRUFESjthQUFBLE1BQUE7dUJBR0ksSUFBQyxDQUFBLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBaEIsQ0FBdUIsSUFBQyxDQUFBLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBdEMsRUFISjthQURKO1NBQUEsTUFBQTttQkFNSSxJQUFDLENBQUEsTUFBTSxDQUFDLFFBQVIsQ0FBQSxFQU5KOztJQUZLOztvQkFVVCxPQUFBLEdBQVMsU0FBQyxJQUFEO1FBRUwsSUFBRyxJQUFDLENBQUEsTUFBTSxDQUFDLEtBQVIsS0FBaUIsQ0FBcEI7bUJBQ0ksSUFBQyxDQUFBLElBQUksQ0FBQyxTQUFOLEdBQWtCLElBQUksQ0FBQyxTQUFMLENBQWUsS0FBSyxDQUFDLEtBQU4sQ0FBWSxJQUFaLENBQWYsRUFEdEI7U0FBQSxNQUFBO21CQUdJLElBQUMsQ0FBQSxJQUFJLENBQUMsU0FBTixHQUFrQixLQUFLLENBQUMsSUFBTixDQUFXLElBQVgsRUFIdEI7O0lBRks7O29CQU9ULEtBQUEsR0FBTyxTQUFBO2VBQUcsSUFBQyxDQUFBLElBQUksQ0FBQyxTQUFOLEdBQWtCO0lBQXJCOztvQkFFUCxVQUFBLEdBQVksU0FBQyxFQUFEO0FBRVIsWUFBQTtRQUFBLElBQUMsQ0FBQSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQVosR0FBc0IsRUFBRSxDQUFDLElBQUosR0FBUztRQUM5QixJQUFHLElBQUMsQ0FBQSxNQUFNLENBQUMsS0FBUixLQUFpQixJQUFDLENBQUEsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFoQixDQUFBLENBQUEsR0FBMEIsQ0FBOUM7WUFDSSxLQUFBLEdBQVEsRUFBRSxDQUFDLEtBQUgsR0FBVyxFQUFFLENBQUMsSUFBZCxHQUFxQjtZQUM3QixJQUFDLENBQUEsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFaLEdBQXVCLEtBQUQsR0FBTztZQUM3QixJQUFHLEtBQUEsR0FBUSxFQUFYO3VCQUNJLElBQUMsQ0FBQSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQVosR0FBc0IsT0FEMUI7YUFBQSxNQUFBO3VCQUdJLElBQUMsQ0FBQSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQVosR0FBc0IsS0FIMUI7YUFISjtTQUFBLE1BQUE7bUJBUUksSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBWixHQUFzQixDQUFDLEVBQUUsQ0FBQyxLQUFILEdBQVcsRUFBRSxDQUFDLElBQWYsQ0FBQSxHQUFvQixLQVI5Qzs7SUFIUTs7Ozs7O0FBYWhCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiIyMjXG4gMDAwMDAwMCAgMDAwMDAwMDAgICAwMDAgICAwMDAgIDAwICAgICAwMCAgMDAwMDAwMCAgXG4wMDAgICAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwXG4wMDAgICAgICAgMDAwMDAwMCAgICAwMDAgICAwMDAgIDAwMDAwMDAwMCAgMDAwMDAwMCAgXG4wMDAgICAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAwIDAwMCAgMDAwICAgMDAwXG4gMDAwMDAwMCAgMDAwICAgMDAwICAgMDAwMDAwMCAgIDAwMCAgIDAwMCAgMDAwMDAwMCAgXG4jIyNcblxueyBzbGFzaCwgZWxlbSwga2xvZywgJCB9ID0gcmVxdWlyZSAna3hrJ1xuXG5GaWxlID0gcmVxdWlyZSAnLi90b29scy9maWxlJ1xuXG5jbGFzcyBDcnVtYlxuXG4gICAgQDogKEBjb2x1bW4pIC0+XG4gICAgICAgIFxuICAgICAgICBAZWxlbSA9IGVsZW0gY2xhc3M6J2NydW1iJ1xuICAgICAgICBAZWxlbS5jb2x1bW5JbmRleCA9IEBjb2x1bW4uaW5kZXhcbiAgICAgICAgQGVsZW0uYWRkRXZlbnRMaXN0ZW5lciAnY2xpY2snIEBvbkNsaWNrXG4gICAgICAgICQoJ2NydW1icycpLmFwcGVuZENoaWxkIEBlbGVtXG5cbiAgICBvbkNsaWNrOiAoZXZlbnQpID0+XG4gICAgICAgIFxuICAgICAgICBpZiBAY29sdW1uLmluZGV4ID09IDBcbiAgICAgICAgICAgIGlmIGV2ZW50LnRhcmdldC5pZFxuICAgICAgICAgICAgICAgIEBjb2x1bW4uYnJvd3Nlci5icm93c2UgZXZlbnQudGFyZ2V0LmlkXG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgQGNvbHVtbi5icm93c2VyLmJyb3dzZSBAY29sdW1uLnBhcmVudC5maWxlXG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIEBjb2x1bW4ubWFrZVJvb3QoKVxuICAgICAgICBcbiAgICBzZXRGaWxlOiAoZmlsZSkgLT5cbiAgICAgICAgXG4gICAgICAgIGlmIEBjb2x1bW4uaW5kZXggPT0gMFxuICAgICAgICAgICAgQGVsZW0uaW5uZXJIVE1MID0gRmlsZS5jcnVtYlNwYW4gc2xhc2gudGlsZGUgZmlsZVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBAZWxlbS5pbm5lckhUTUwgPSBzbGFzaC5iYXNlIGZpbGVcbiAgICAgICAgXG4gICAgY2xlYXI6IC0+IEBlbGVtLmlubmVySFRNTCA9ICcnXG4gICAgXG4gICAgdXBkYXRlUmVjdDogKGJyKSAtPlxuICAgICAgICBcbiAgICAgICAgQGVsZW0uc3R5bGUubGVmdCA9IFwiI3tici5sZWZ0fXB4XCJcbiAgICAgICAgaWYgQGNvbHVtbi5pbmRleCA9PSBAY29sdW1uLmJyb3dzZXIubnVtQ29scygpLTFcbiAgICAgICAgICAgIHdpZHRoID0gYnIucmlnaHQgLSBici5sZWZ0IC0gMTM1XG4gICAgICAgICAgICBAZWxlbS5zdHlsZS53aWR0aCA9IFwiI3t3aWR0aH1weFwiXG4gICAgICAgICAgICBpZiB3aWR0aCA8IDUwXG4gICAgICAgICAgICAgICAgQGVsZW0uc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIEBlbGVtLnN0eWxlLmRpc3BsYXkgPSBudWxsXG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIEBlbGVtLnN0eWxlLndpZHRoID0gXCIje2JyLnJpZ2h0IC0gYnIubGVmdH1weFwiXG4gICAgICAgIFxubW9kdWxlLmV4cG9ydHMgPSBDcnVtYlxuIl19
//# sourceURL=../coffee/crumb.coffee
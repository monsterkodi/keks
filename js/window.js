// koffee 1.4.0

/*
000   000  000  000   000  0000000     0000000   000   000
000 0 000  000  0000  000  000   000  000   000  000 0 000
000000000  000  000 0 000  000   000  000   000  000000000
000   000  000  000  0000  000   000  000   000  000   000
00     00  000  000   000  0000000     0000000   00     00
 */
var $, Browser, FileBrowser, _, args, dialog, electron, klog, onCombo, onMenuAction, pkg, post, ref, remote, scheme, showContextMenu, slash, stopEvent, w, win, winID, winMain;

ref = require('kxk'), post = ref.post, args = ref.args, slash = ref.slash, stopEvent = ref.stopEvent, scheme = ref.scheme, klog = ref.klog, win = ref.win, $ = ref.$, _ = ref._;

FileBrowser = require('./filebrowser');

w = new win({
    dir: __dirname,
    pkg: require('../package.json'),
    menu: '../coffee/menu.noon',
    icon: '../img/menu@2x.png',
    prefsSeperator: 'â–¸'
});

electron = require('electron');

pkg = require('../package.json');

remote = electron.remote;

dialog = remote.dialog;

Browser = remote.BrowserWindow;

win = window.win = remote.getCurrentWindow();

winID = window.winID = win.id;

winMain = function() {
    var fileBrowser;
    fileBrowser = new FileBrowser($("#main"));
    fileBrowser.loadItem({
        type: 'dir',
        file: slash.resolve('~')
    });
    return win.on('resize', function() {
        return fileBrowser.resized();
    });
};

window.onload = function() {
    return klog('win onload');
};

showContextMenu = (function(_this) {
    return function(absPos) {
        var opt;
        if (absPos == null) {
            absPos = kpos(_this.view.getBoundingClientRect().left, _this.view.getBoundingClientRect().top);
        }
        opt = {
            items: [
                {
                    text: 'Browse',
                    combo: 'command+.',
                    accel: 'ctrl+.',
                    cb: function() {
                        return window.commandline.startCommand('browse');
                    }
                }, {
                    text: 'Back',
                    combo: 'command+1',
                    cb: function() {
                        return post.emit('menuAction', 'Navigate Backward');
                    }
                }, {
                    text: ''
                }, {
                    text: 'Maximize',
                    combo: 'command+shift+y',
                    accel: 'ctrl+shift+y',
                    cb: function() {
                        return window.split.maximizeEditor();
                    }
                }, {
                    text: ''
                }
            ]
        };
        opt.items = opt.items.concat(window.titlebar.menuTemplate());
        opt.x = absPos.x;
        opt.y = absPos.y;
        return popup.menu(opt);
    };
})(this);

document.body.addEventListener('contextmenu', (function(_this) {
    return function(event) {
        return stopEvent(event, showContextMenu(kpos(event)));
    };
})(this));

onMenuAction = function(name, args) {
    switch (name) {
        case 'Undo':
            return window.focusEditor["do"].undo();
        case 'Redo':
            return window.focusEditor["do"].redo();
        case 'Cut':
            return window.focusEditor.cut();
        case 'Copy':
            return window.focusEditor.copy();
        case 'Paste':
            return window.focusEditor.paste();
        case 'New Window':
            return post.toMain('newWindowWithFile', editor.currentFile);
        case 'Increase':
            return changeFontSize(+1);
        case 'Decrease':
            return changeFontSize(-1);
        case 'Reset':
            return resetFontSize();
        case 'Add to Shelf':
            return addToShelf();
        case 'Reload Window':
            return reloadWin();
    }
    return post.toMain('menuAction', name, args);
};

post.on('menuAction', onMenuAction);

onCombo = function(combo, info) {
    var char, event, key, mod;
    if (!combo) {
        return;
    }
    return mod = info.mod, key = info.key, combo = info.combo, char = info.char, event = info.event, info;
};

post.on('combo', onCombo);

winMain();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2luZG93LmpzIiwic291cmNlUm9vdCI6Ii4iLCJzb3VyY2VzIjpbIiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7O0FBQUEsSUFBQTs7QUFRQSxNQUE0RCxPQUFBLENBQVEsS0FBUixDQUE1RCxFQUFFLGVBQUYsRUFBUSxlQUFSLEVBQWMsaUJBQWQsRUFBcUIseUJBQXJCLEVBQWdDLG1CQUFoQyxFQUF3QyxlQUF4QyxFQUE4QyxhQUE5QyxFQUFtRCxTQUFuRCxFQUFzRDs7QUFFdEQsV0FBQSxHQUFjLE9BQUEsQ0FBUSxlQUFSOztBQUVkLENBQUEsR0FBSSxJQUFJLEdBQUosQ0FDQTtJQUFBLEdBQUEsRUFBUSxTQUFSO0lBQ0EsR0FBQSxFQUFRLE9BQUEsQ0FBUSxpQkFBUixDQURSO0lBRUEsSUFBQSxFQUFRLHFCQUZSO0lBR0EsSUFBQSxFQUFRLG9CQUhSO0lBSUEsY0FBQSxFQUFnQixHQUpoQjtDQURBOztBQU9KLFFBQUEsR0FBVyxPQUFBLENBQVEsVUFBUjs7QUFDWCxHQUFBLEdBQVcsT0FBQSxDQUFRLGlCQUFSOztBQUVYLE1BQUEsR0FBVyxRQUFRLENBQUM7O0FBQ3BCLE1BQUEsR0FBVyxNQUFNLENBQUM7O0FBQ2xCLE9BQUEsR0FBVyxNQUFNLENBQUM7O0FBQ2xCLEdBQUEsR0FBVyxNQUFNLENBQUMsR0FBUCxHQUFlLE1BQU0sQ0FBQyxnQkFBUCxDQUFBOztBQUMxQixLQUFBLEdBQVcsTUFBTSxDQUFDLEtBQVAsR0FBZSxHQUFHLENBQUM7O0FBUTlCLE9BQUEsR0FBVSxTQUFBO0FBRU4sUUFBQTtJQUFBLFdBQUEsR0FBYyxJQUFJLFdBQUosQ0FBZ0IsQ0FBQSxDQUFFLE9BQUYsQ0FBaEI7SUFDZCxXQUFXLENBQUMsUUFBWixDQUFxQjtRQUFBLElBQUEsRUFBSyxLQUFMO1FBQVcsSUFBQSxFQUFLLEtBQUssQ0FBQyxPQUFOLENBQWMsR0FBZCxDQUFoQjtLQUFyQjtXQUVBLEdBQUcsQ0FBQyxFQUFKLENBQU8sUUFBUCxFQUFnQixTQUFB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VDtBQVVzQyxtQkFBTyxhQUFBLENBQUE7QUFWN0MsYUFXUyxjQVhUO0FBV3NDLG1CQUFPLFVBQUEsQ0FBQTtBQVg3QyxhQVlTLGVBWlQ7QUFZc0MsbUJBQU8sU0FBQSxDQUFBO0FBWjdDO1dBY0EsSUFBSSxDQUFDLE1BQUwsQ0FBWSxZQUFaLEVBQTBCLElBQTFCLEVBQWdDLElBQWhDO0FBaEJXOztBQWtCZixJQUFJLENBQUMsRUFBTCxDQUFRLFlBQVIsRUFBcUIsWUFBckI7O0FBUUEsT0FBQSxHQUFVLFNBQUMsS0FBRCxFQUFRLElBQVI7QUFFTixRQUFBO0lBQUEsSUFBVSxDQUFJLEtBQWQ7QUFBQSxlQUFBOztXQUVFLGNBQUYsRUFBTyxjQUFQLEVBQVksa0JBQVosRUFBbUIsZ0JBQW5CLEVBQXlCLGtCQUF6QixFQUFtQztBQUo3Qjs7QUFXVixJQUFJLENBQUMsRUFBTCxDQUFRLE9BQVIsRUFBZ0IsT0FBaEI7O0FBRUEsT0FBQSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiIyMjXG4wMDAgICAwMDAgIDAwMCAgMDAwICAgMDAwICAwMDAwMDAwICAgICAwMDAwMDAwICAgMDAwICAgMDAwXG4wMDAgMCAwMDAgIDAwMCAgMDAwMCAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwIDAgMDAwXG4wMDAwMDAwMDAgIDAwMCAgMDAwIDAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwMDAwMDAwXG4wMDAgICAwMDAgIDAwMCAgMDAwICAwMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwXG4wMCAgICAgMDAgIDAwMCAgMDAwICAgMDAwICAwMDAwMDAwICAgICAwMDAwMDAwICAgMDAgICAgIDAwXG4jIyNcblxueyBwb3N0LCBhcmdzLCBzbGFzaCwgc3RvcEV2ZW50LCBzY2hlbWUsIGtsb2csIHdpbiwgJCwgXyB9ID0gcmVxdWlyZSAna3hrJ1xuXG5GaWxlQnJvd3NlciA9IHJlcXVpcmUgJy4vZmlsZWJyb3dzZXInXG4gIFxudyA9IG5ldyB3aW5cbiAgICBkaXI6ICAgIF9fZGlybmFtZVxuICAgIHBrZzogICAgcmVxdWlyZSAnLi4vcGFja2FnZS5qc29uJ1xuICAgIG1lbnU6ICAgJy4uL2NvZmZlZS9tZW51Lm5vb24nXG4gICAgaWNvbjogICAnLi4vaW1nL21lbnVAMngucG5nJ1xuICAgIHByZWZzU2VwZXJhdG9yOiAn4pa4J1xuXG5lbGVjdHJvbiA9IHJlcXVpcmUgJ2VsZWN0cm9uJ1xucGtnICAgICAgPSByZXF1aXJlICcuLi9wYWNrYWdlLmpzb24nXG5cbnJlbW90ZSAgID0gZWxlY3Ryb24ucmVtb3RlXG5kaWFsb2cgICA9IHJlbW90ZS5kaWFsb2dcbkJyb3dzZXIgID0gcmVtb3RlLkJyb3dzZXJXaW5kb3dcbndpbiAgICAgID0gd2luZG93LndpbiAgID0gcmVtb3RlLmdldEN1cnJlbnRXaW5kb3coKVxud2luSUQgICAgPSB3aW5kb3cud2luSUQgPSB3aW4uaWRcblxuIyAwMDAgICAwMDAgIDAwMCAgMDAwICAgMDAwICAwMCAgICAgMDAgICAwMDAwMDAwICAgMDAwICAwMDAgICAwMDBcbiMgMDAwIDAgMDAwICAwMDAgIDAwMDAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgMDAwMCAgMDAwXG4jIDAwMDAwMDAwMCAgMDAwICAwMDAgMCAwMDAgIDAwMDAwMDAwMCAgMDAwMDAwMDAwICAwMDAgIDAwMCAwIDAwMFxuIyAwMDAgICAwMDAgIDAwMCAgMDAwICAwMDAwICAwMDAgMCAwMDAgIDAwMCAgIDAwMCAgMDAwICAwMDAgIDAwMDBcbiMgMDAgICAgIDAwICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgMDAwICAgMDAwXG5cbndpbk1haW4gPSAtPiBcblxuICAgIGZpbGVCcm93c2VyID0gbmV3IEZpbGVCcm93c2VyICQgXCIjbWFpblwiXG4gICAgZmlsZUJyb3dzZXIubG9hZEl0ZW0gdHlwZTonZGlyJyBmaWxlOnNsYXNoLnJlc29sdmUgJ34nXG4gICAgXG4gICAgd2luLm9uICdyZXNpemUnIC0+IGZpbGVCcm93c2VyLnJlc2l6ZWQoKVxuXG53aW5kb3cub25sb2FkID0gLT4ga2xvZyAnd2luIG9ubG9hZCdcblxuIyAwMDAwMDAwMCAgICAwMDAwMDAwICAgMDAwMDAwMDAgICAwMDAgICAwMDAgIDAwMDAwMDAwXG4jIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwXG4jIDAwMDAwMDAwICAgMDAwICAgMDAwICAwMDAwMDAwMCAgIDAwMCAgIDAwMCAgMDAwMDAwMDBcbiMgMDAwICAgICAgICAwMDAgICAwMDAgIDAwMCAgICAgICAgMDAwICAgMDAwICAwMDBcbiMgMDAwICAgICAgICAgMDAwMDAwMCAgIDAwMCAgICAgICAgIDAwMDAwMDAgICAwMDBcblxuc2hvd0NvbnRleHRNZW51ID0gKGFic1BvcykgPT5cblxuICAgIGlmIG5vdCBhYnNQb3M/XG4gICAgICAgIGFic1BvcyA9IGtwb3MgQHZpZXcuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCwgQHZpZXcuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wXG5cbiAgICBvcHQgPSBpdGVtczogW1xuICAgICAgICB0ZXh0OiAgICdCcm93c2UnXG4gICAgICAgIGNvbWJvOiAgJ2NvbW1hbmQrLidcbiAgICAgICAgYWNjZWw6ICAnY3RybCsuJ1xuICAgICAgICBjYjogICAgIC0+IHdpbmRvdy5jb21tYW5kbGluZS5zdGFydENvbW1hbmQgJ2Jyb3dzZSdcbiAgICAsXG4gICAgICAgIHRleHQ6ICAgJ0JhY2snXG4gICAgICAgIGNvbWJvOiAgJ2NvbW1hbmQrMSdcbiAgICAgICAgY2I6ICAgICAtPiBwb3N0LmVtaXQgJ21lbnVBY3Rpb24nLCAnTmF2aWdhdGUgQmFja3dhcmQnXG4gICAgLFxuICAgICAgICB0ZXh0OiAgICcnXG4gICAgLFxuICAgICAgICB0ZXh0OiAgICdNYXhpbWl6ZSdcbiAgICAgICAgY29tYm86ICAnY29tbWFuZCtzaGlmdCt5J1xuICAgICAgICBhY2NlbDogICdjdHJsK3NoaWZ0K3knXG4gICAgICAgIGNiOiAgICAgLT4gd2luZG93LnNwbGl0Lm1heGltaXplRWRpdG9yKClcbiAgICAsXG4gICAgICAgIHRleHQ6ICAgJydcbiAgICBdXG5cbiAgICBvcHQuaXRlbXMgPSBvcHQuaXRlbXMuY29uY2F0IHdpbmRvdy50aXRsZWJhci5tZW51VGVtcGxhdGUoKVxuXG4gICAgb3B0LnggPSBhYnNQb3MueFxuICAgIG9wdC55ID0gYWJzUG9zLnlcbiAgICBwb3B1cC5tZW51IG9wdFxuXG5kb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIgJ2NvbnRleHRtZW51JyAoZXZlbnQpID0+IHN0b3BFdmVudCBldmVudCwgc2hvd0NvbnRleHRNZW51IGtwb3MgZXZlbnRcbiAgICBcbiMgMDAgICAgIDAwICAwMDAwMDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgICAgICAwMDAwMDAwICAgIDAwMDAwMDAgIDAwMDAwMDAwMCAgMDAwICAgMDAwMDAwMCAgIDAwMCAgIDAwMFxuIyAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAwICAwMDAgIDAwMCAgIDAwMCAgICAgMDAwICAgMDAwICAwMDAgICAgICAgICAgMDAwICAgICAwMDAgIDAwMCAgIDAwMCAgMDAwMCAgMDAwXG4jIDAwMDAwMDAwMCAgMDAwMDAwMCAgIDAwMCAwIDAwMCAgMDAwICAgMDAwICAgICAwMDAwMDAwMDAgIDAwMCAgICAgICAgICAwMDAgICAgIDAwMCAgMDAwICAgMDAwICAwMDAgMCAwMDBcbiMgMDAwIDAgMDAwICAwMDAgICAgICAgMDAwICAwMDAwICAwMDAgICAwMDAgICAgIDAwMCAgIDAwMCAgMDAwICAgICAgICAgIDAwMCAgICAgMDAwICAwMDAgICAwMDAgIDAwMCAgMDAwMFxuIyAwMDAgICAwMDAgIDAwMDAwMDAwICAwMDAgICAwMDAgICAwMDAwMDAwICAgICAgMDAwICAgMDAwICAgMDAwMDAwMCAgICAgMDAwICAgICAwMDAgICAwMDAwMDAwICAgMDAwICAgMDAwXG5cbm9uTWVudUFjdGlvbiA9IChuYW1lLCBhcmdzKSAtPlxuXG4gICAgc3dpdGNoIG5hbWVcblxuICAgICAgICB3aGVuICdVbmRvJyAgICAgICAgICAgICAgICAgIHRoZW4gcmV0dXJuIHdpbmRvdy5mb2N1c0VkaXRvci5kby51bmRvKClcbiAgICAgICAgd2hlbiAnUmVkbycgICAgICAgICAgICAgICAgICB0aGVuIHJldHVybiB3aW5kb3cuZm9jdXNFZGl0b3IuZG8ucmVkbygpXG4gICAgICAgIHdoZW4gJ0N1dCcgICAgICAgICAgICAgICAgICAgdGhlbiByZXR1cm4gd2luZG93LmZvY3VzRWRpdG9yLmN1dCgpXG4gICAgICAgIHdoZW4gJ0NvcHknICAgICAgICAgICAgICAgICAgdGhlbiByZXR1cm4gd2luZG93LmZvY3VzRWRpdG9yLmNvcHkoKVxuICAgICAgICB3aGVuICdQYXN0ZScgICAgICAgICAgICAgICAgIHRoZW4gcmV0dXJuIHdpbmRvdy5mb2N1c0VkaXRvci5wYXN0ZSgpXG4gICAgICAgIHdoZW4gJ05ldyBXaW5kb3cnICAgICAgICAgICAgdGhlbiByZXR1cm4gcG9zdC50b01haW4gJ25ld1dpbmRvd1dpdGhGaWxlJywgZWRpdG9yLmN1cnJlbnRGaWxlXG4gICAgICAgIHdoZW4gJ0luY3JlYXNlJyAgICAgICAgICAgICAgdGhlbiByZXR1cm4gY2hhbmdlRm9udFNpemUgKzFcbiAgICAgICAgd2hlbiAnRGVjcmVhc2UnICAgICAgICAgICAgICB0aGVuIHJldHVybiBjaGFuZ2VGb250U2l6ZSAtMVxuICAgICAgICB3aGVuICdSZXNldCcgICAgICAgICAgICAgICAgIHRoZW4gcmV0dXJuIHJlc2V0Rm9udFNpemUoKVxuICAgICAgICB3aGVuICdBZGQgdG8gU2hlbGYnICAgICAgICAgIHRoZW4gcmV0dXJuIGFkZFRvU2hlbGYoKVxuICAgICAgICB3aGVuICdSZWxvYWQgV2luZG93JyAgICAgICAgIHRoZW4gcmV0dXJuIHJlbG9hZFdpbigpXG5cbiAgICBwb3N0LnRvTWFpbiAnbWVudUFjdGlvbicsIG5hbWUsIGFyZ3NcblxucG9zdC5vbiAnbWVudUFjdGlvbicgb25NZW51QWN0aW9uXG5cbiMgMDAwICAgMDAwICAwMDAwMDAwMCAgMDAwICAgMDAwXG4jIDAwMCAgMDAwICAgMDAwICAgICAgICAwMDAgMDAwXG4jIDAwMDAwMDAgICAgMDAwMDAwMCAgICAgMDAwMDBcbiMgMDAwICAwMDAgICAwMDAgICAgICAgICAgMDAwXG4jIDAwMCAgIDAwMCAgMDAwMDAwMDAgICAgIDAwMFxuXG5vbkNvbWJvID0gKGNvbWJvLCBpbmZvKSAtPlxuXG4gICAgcmV0dXJuIGlmIG5vdCBjb21ib1xuXG4gICAgeyBtb2QsIGtleSwgY29tYm8sIGNoYXIsIGV2ZW50IH0gPSBpbmZvXG5cbiAgICAjIHN3aXRjaCBjb21ib1xuICAgICAgICAjIHdoZW4gJ2NvbW1hbmQrc2hpZnQrPScgICAgdGhlbiByZXR1cm4gc3RvcEV2ZW50IGV2ZW50LCBAY2hhbmdlWm9vbSArMVxuICAgICAgICAjIHdoZW4gJ2NvbW1hbmQrc2hpZnQrLScgICAgdGhlbiByZXR1cm4gc3RvcEV2ZW50IGV2ZW50LCBAY2hhbmdlWm9vbSAtMVxuICAgICAgICAjIHdoZW4gJ2NvbW1hbmQrc2hpZnQrMCcgICAgdGhlbiByZXR1cm4gc3RvcEV2ZW50IGV2ZW50LCBAcmVzZXRab29tKClcblxucG9zdC5vbiAnY29tYm8nIG9uQ29tYm9cblxud2luTWFpbigpXG4iXX0=
//# sourceURL=../coffee/window.coffee
// koffee 1.4.0

/*
000   000  000  000   000  0000000     0000000   000   000
000 0 000  000  0000  000  000   000  000   000  000 0 000
000000000  000  000 0 000  000   000  000   000  000000000
000   000  000  000  0000  000   000  000   000  000   000
00     00  000  000   000  0000000     0000000   00     00
 */
var $, Browser, FileBrowser, _, args, changeFontSize, clamp, defaultFontSize, dialog, electron, fileBrowser, getFontSize, hideExtensions, klog, kpos, onContextMenu, onMenuAction, onWheel, pkg, popup, post, prefs, ref, remote, resetFontSize, scheme, setFontSize, setStyle, slash, stopEvent, toggleExtensions, w, win, winID, winMain;

ref = require('kxk'), post = ref.post, args = ref.args, slash = ref.slash, prefs = ref.prefs, stopEvent = ref.stopEvent, setStyle = ref.setStyle, scheme = ref.scheme, popup = ref.popup, klog = ref.klog, clamp = ref.clamp, kpos = ref.kpos, win = ref.win, $ = ref.$, _ = ref._;

FileBrowser = require('./filebrowser');

w = new win({
    dir: __dirname,
    pkg: require('../package.json'),
    menu: '../coffee/menu.noon',
    icon: '../img/menu@2x.png',
    prefsSeperator: '▸',
    context: false,
    dragElem: $('#crumbs')
});

electron = require('electron');

pkg = require('../package.json');

remote = electron.remote;

dialog = remote.dialog;

Browser = remote.BrowserWindow;

win = window.win = remote.getCurrentWindow();

winID = window.winID = win.id;

fileBrowser = null;

winMain = function() {
    var active, load;
    fileBrowser = new FileBrowser($("#main"));
    if (args.folder[0]) {
        fileBrowser.browse(args.folder[0]);
    } else {
        if (load = prefs.get('load')) {
            klog('init load', load);
            if (load.last !== load.first) {
                active = load.last.slice(load.first.length);
                active = load.first + '/' + slash.split(active)[0];
            }
            fileBrowser.browse(load.first, {
                active: active,
                cb: function() {
                    return fileBrowser.navigateToFile(load.last);
                }
            });
        } else {
            fileBrowser.browse('~');
        }
    }
    win.on('resize', function() {
        return fileBrowser.resized();
    });
    return prefs.apply('browser▸hideExtensions', hideExtensions);
};

onContextMenu = function(event) {
    if (!event.target.classList.contains('crumb')) {
        return;
    }
    return fileBrowser.columns[event.target.columnIndex].onContextMenu(event, true);
};

$("#crumbs").addEventListener('contextmenu', onContextMenu);

defaultFontSize = 18;

getFontSize = function() {
    return prefs.get('fontSize', defaultFontSize);
};

setFontSize = function(s) {
    if (!_.isFinite(s)) {
        s = getFontSize();
    }
    s = clamp(8, 44, s);
    prefs.set('fontSize', s);
    setStyle('#main', 'font-size', s + "px");
    return setStyle('.rowNameInput', 'font-size', s + "px");
};

changeFontSize = function(d) {
    var f, s;
    s = getFontSize();
    if (s >= 30) {
        f = 4;
    } else if (s >= 20) {
        f = 2;
    } else {
        f = 1;
    }
    return setFontSize(s + f * d);
};

resetFontSize = function() {
    prefs.set('fontSize', defaultFontSize);
    return setFontSize(defaultFontSize);
};

onWheel = function(event) {
    if (0 <= w.modifiers.indexOf('ctrl')) {
        return changeFontSize(-event.deltaY / 100);
    }
};

setFontSize(getFontSize());

window.document.addEventListener('wheel', onWheel);

onMenuAction = function(name, args) {
    switch (name) {
        case 'Toggle Extensions':
            return toggleExtensions();
        case 'Increase':
            return changeFontSize(+1);
        case 'Decrease':
            return changeFontSize(-1);
        case 'Reset':
            return resetFontSize();
        case 'Add to Shelf':
            return addToShelf();
        case 'Reload Window':
            return reloadWin();
    }
    klog('menuAction', name);
    return post.toMain('menuAction', name, args);
};

post.on('menuAction', onMenuAction);

post.on('load', function(info) {
    var load;
    load = prefs.get('load', {});
    if (info.column) {
        load.last = info.item.file;
    } else {
        load.first = info.item.file;
        load.last = info.item.file;
    }
    return prefs.set('load', load);
});

toggleExtensions = function() {
    return prefs.toggle('browser▸hideExtensions', setExtensions);
};

hideExtensions = function(hide) {
    if (hide == null) {
        hide = true;
    }
    setStyle('.browserRow .ext', 'display', hide && 'none' || 'initial');
    return setStyle('.fileInfoFile .ext', 'display', hide && 'none' || 'initial');
};

winMain();

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/window.coffee
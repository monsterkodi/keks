// koffee 1.4.0

/*
000   000  00000000   0000000   0000000    00000000  00000000   
000   000  000       000   000  000   000  000       000   000  
000000000  0000000   000000000  000   000  0000000   0000000    
000   000  000       000   000  000   000  000       000   000  
000   000  00000000  000   000  0000000    00000000  000   000
 */
var $, File, Header, elem, klog, kpos, ref, slash,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('kxk'), slash = ref.slash, elem = ref.elem, kpos = ref.kpos, klog = ref.klog, $ = ref.$;

File = require('./tools/file');

Header = (function() {
    function Header(browser) {
        this.browser = browser;
        this.onMouseUp = bind(this.onMouseUp, this);
        this.onMouseDown = bind(this.onMouseDown, this);
        this.elem = elem({
            id: 'header'
        });
        this.elem.addEventListener('mousedown', this.onMouseDown);
        this.elem.addEventListener('mouseup', this.onMouseUp);
        $('crumbs').appendChild(this.elem);
        this.crumb = elem({
            "class": 'crumb'
        });
        this.elem.appendChild(this.crumb);
    }

    Header.prototype.del = function() {
        return this.elem.remove();
    };

    Header.prototype.setDirty = function(dirty) {
        this.dirty = dirty;
        klog('dirty', this.dirty);
        if (this.dirty) {
            this.crumb.appendChild(elem('span', {
                "class": 'dot',
                text: '●'
            }));
            return this.crumb.insertBefore(elem('span', {
                "class": 'dot',
                text: '●'
            }));
        } else {
            if (this.crumb.lastChild.className === 'dot') {
                this.crumb.lastChild.remove();
                return this.crumb.firstChild.remove();
            }
        }
    };

    Header.prototype.onMouseDown = function(event) {
        return this.downPos = kpos(window.win.getBounds());
    };

    Header.prototype.onMouseUp = function(event) {
        var br, root, upPos;
        if (!this.downPos) {
            return;
        }
        upPos = kpos(window.win.getBounds());
        if (upPos.to(this.downPos).length() > 0) {
            delete this.downPos;
            return;
        }
        if (event.target.id) {
            this.browser.browse(event.target.id);
        } else {
            root = this.crumb.firstChild;
            br = root.getBoundingClientRect();
            if (kpos(event).x < br.left) {
                this.browser.browse(root.id);
            } else {
                this.browser.browse(this.file);
            }
        }
        return delete this.downPos;
    };

    Header.prototype.setFile = function(file) {
        this.file = file;
        return this.crumb.innerHTML = File.crumbSpan(slash.tilde(this.file));
    };

    return Header;

})();

module.exports = Header;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmpzIiwic291cmNlUm9vdCI6Ii4iLCJzb3VyY2VzIjpbIiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7O0FBQUEsSUFBQSw2Q0FBQTtJQUFBOztBQVFBLE1BQWlDLE9BQUEsQ0FBUSxLQUFSLENBQWpDLEVBQUUsaUJBQUYsRUFBUyxlQUFULEVBQWUsZUFBZixFQUFxQixlQUFyQixFQUEyQjs7QUFFM0IsSUFBQSxHQUFPLE9BQUEsQ0FBUSxjQUFSOztBQUVEO0lBRUMsZ0JBQUMsT0FBRDtRQUFDLElBQUMsQ0FBQSxVQUFEOzs7UUFFQSxJQUFDLENBQUEsSUFBRCxHQUFRLElBQUEsQ0FBSztZQUFBLEVBQUEsRUFBRyxRQUFIO1NBQUw7UUFDUixJQUFDLENBQUEsSUFBSSxDQUFDLGdCQUFOLENBQXVCLFdBQXZCLEVBQW1DLElBQUMsQ0FBQSxXQUFwQztRQUNBLElBQUMsQ0FBQSxJQUFJLENBQUMsZ0JBQU4sQ0FBdUIsU0FBdkIsRUFBbUMsSUFBQyxDQUFBLFNBQXBDO1FBQ0EsQ0FBQSxDQUFFLFFBQUYsQ0FBVyxDQUFDLFdBQVosQ0FBd0IsSUFBQyxDQUFBLElBQXpCO1FBRUEsSUFBQyxDQUFBLEtBQUQsR0FBUyxJQUFBLENBQUs7WUFBQSxDQUFBLEtBQUEsQ0FBQSxFQUFNLE9BQU47U0FBTDtRQUNULElBQUMsQ0FBQSxJQUFJLENBQUMsV0FBTixDQUFrQixJQUFDLENBQUEsS0FBbkI7SUFSRDs7cUJBVUgsR0FBQSxHQUFLLFNBQUE7ZUFBRyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU4sQ0FBQTtJQUFIOztxQkFFTCxRQUFBLEdBQVUsU0FBQyxLQUFEO1FBQUMsSUFBQyxDQUFBLFFBQUQ7UUFFUCxJQUFBLENBQUssT0FBTCxFQUFhLElBQUMsQ0FBQSxLQUFkO1FBQ0EsSUFBRyxJQUFDLENBQUEsS0FBSjtZQUNJLElBQUMsQ0FBQSxLQUFLLENBQUMsV0FBUCxDQUFvQixJQUFBLENBQUssTUFBTCxFQUFZO2dCQUFBLENBQUEsS0FBQSxDQUFBLEVBQU0sS0FBTjtnQkFBWSxJQUFBLEVBQUssR0FBakI7YUFBWixDQUFwQjttQkFDQSxJQUFDLENBQUEsS0FBSyxDQUFDLFlBQVAsQ0FBb0IsSUFBQSxDQUFLLE1BQUwsRUFBWTtnQkFBQSxDQUFBLEtBQUEsQ0FBQSxFQUFNLEtBQU47Z0JBQVksSUFBQSxFQUFLLEdBQWpCO2FBQVosQ0FBcEIsRUFGSjtTQUFBLE1BQUE7WUFJSSxJQUFHLElBQUMsQ0FBQSxLQUFLLENBQUMsU0FBUyxDQUFDLFNBQWpCLEtBQThCLEtBQWpDO2dCQUNJLElBQUMsQ0FBQSxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQWpCLENBQUE7dUJBQ0EsSUFBQyxDQUFBLEtBQUssQ0FBQyxVQUFVLENBQUMsTUFBbEIsQ0FBQSxFQUZKO2FBSko7O0lBSE07O3FCQVdWLFdBQUEsR0FBYSxTQUFDLEtBQUQ7ZUFFVCxJQUFDLENBQUEsT0FBRCxHQUFXLElBQUEsQ0FBSyxNQUFNLENBQUMsR0FBRyxDQUFDLFNBQVgsQ0FBQSxDQUFMO0lBRkY7O3FCQUliLFNBQUEsR0FBVyxTQUFDLEtBQUQ7QUFFUCxZQUFBO1FBQUEsSUFBVSxDQUFJLElBQUMsQ0FBQSxPQUFmO0FBQUEsbUJBQUE7O1FBRUEsS0FBQSxHQUFRLElBQUEsQ0FBSyxNQUFNLENBQUMsR0FBRyxDQUFDLFNBQVgsQ0FBQSxDQUFMO1FBRVIsSUFBRyxLQUFLLENBQUMsRUFBTixDQUFTLElBQUMsQ0FBQSxPQUFWLENBQWtCLENBQUMsTUFBbkIsQ0FBQSxDQUFBLEdBQThCLENBQWpDO1lBQ0ksT0FBTyxJQUFDLENBQUE7QUFDUixtQkFGSjs7UUFJQSxJQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBaEI7WUFDSSxJQUFDLENBQUEsT0FBTyxDQUFDLE1BQVQsQ0FBZ0IsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUE3QixFQURKO1NBQUEsTUFBQTtZQUdJLElBQUEsR0FBTyxJQUFDLENBQUEsS0FBSyxDQUFDO1lBQ2QsRUFBQSxHQUFLLElBQUksQ0FBQyxxQkFBTCxDQUFBO1lBQ0wsSUFBRyxJQUFBLENBQUssS0FBTCxDQUFXLENBQUMsQ0FBWixHQUFnQixFQUFFLENBQUMsSUFBdEI7Z0JBQ0ksSUFBQyxDQUFBLE9BQU8sQ0FBQyxNQUFULENBQWdCLElBQUksQ0FBQyxFQUFyQixFQURKO2FBQUEsTUFBQTtnQkFHSSxJQUFDLENBQUEsT0FBTyxDQUFDLE1BQVQsQ0FBZ0IsSUFBQyxDQUFBLElBQWpCLEVBSEo7YUFMSjs7ZUFVQSxPQUFPLElBQUMsQ0FBQTtJQXBCRDs7cUJBc0JYLE9BQUEsR0FBUyxTQUFDLElBQUQ7UUFBQyxJQUFDLENBQUEsT0FBRDtlQUVOLElBQUMsQ0FBQSxLQUFLLENBQUMsU0FBUCxHQUFtQixJQUFJLENBQUMsU0FBTCxDQUFlLEtBQUssQ0FBQyxLQUFOLENBQVksSUFBQyxDQUFBLElBQWIsQ0FBZjtJQUZkOzs7Ozs7QUFJYixNQUFNLENBQUMsT0FBUCxHQUFpQiIsInNvdXJjZXNDb250ZW50IjpbIiMjI1xuMDAwICAgMDAwICAwMDAwMDAwMCAgIDAwMDAwMDAgICAwMDAwMDAwICAgIDAwMDAwMDAwICAwMDAwMDAwMCAgIFxuMDAwICAgMDAwICAwMDAgICAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAgICAwMDAgIFxuMDAwMDAwMDAwICAwMDAwMDAwICAgMDAwMDAwMDAwICAwMDAgICAwMDAgIDAwMDAwMDAgICAwMDAwMDAwICAgIFxuMDAwICAgMDAwICAwMDAgICAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAgICAwMDAgIFxuMDAwICAgMDAwICAwMDAwMDAwMCAgMDAwICAgMDAwICAwMDAwMDAwICAgIDAwMDAwMDAwICAwMDAgICAwMDAgIFxuIyMjXG5cbnsgc2xhc2gsIGVsZW0sIGtwb3MsIGtsb2csICQgfSA9IHJlcXVpcmUgJ2t4aydcblxuRmlsZSA9IHJlcXVpcmUgJy4vdG9vbHMvZmlsZSdcblxuY2xhc3MgSGVhZGVyXG5cbiAgICBAOiAoQGJyb3dzZXIpIC0+XG4gICAgICAgIFxuICAgICAgICBAZWxlbSA9IGVsZW0gaWQ6J2hlYWRlcidcbiAgICAgICAgQGVsZW0uYWRkRXZlbnRMaXN0ZW5lciAnbW91c2Vkb3duJyBAb25Nb3VzZURvd25cbiAgICAgICAgQGVsZW0uYWRkRXZlbnRMaXN0ZW5lciAnbW91c2V1cCcgICBAb25Nb3VzZVVwXG4gICAgICAgICQoJ2NydW1icycpLmFwcGVuZENoaWxkIEBlbGVtXG4gICAgICAgIFxuICAgICAgICBAY3J1bWIgPSBlbGVtIGNsYXNzOidjcnVtYidcbiAgICAgICAgQGVsZW0uYXBwZW5kQ2hpbGQgQGNydW1iXG5cbiAgICBkZWw6IC0+IEBlbGVtLnJlbW92ZSgpXG4gICAgXG4gICAgc2V0RGlydHk6IChAZGlydHkpIC0+XG4gICAgICAgIFxuICAgICAgICBrbG9nICdkaXJ0eScgQGRpcnR5XG4gICAgICAgIGlmIEBkaXJ0eVxuICAgICAgICAgICAgQGNydW1iLmFwcGVuZENoaWxkICBlbGVtICdzcGFuJyBjbGFzczonZG90JyB0ZXh0Oifil48nIFxuICAgICAgICAgICAgQGNydW1iLmluc2VydEJlZm9yZSBlbGVtICdzcGFuJyBjbGFzczonZG90JyB0ZXh0Oifil48nIFxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBpZiBAY3J1bWIubGFzdENoaWxkLmNsYXNzTmFtZSA9PSAnZG90J1xuICAgICAgICAgICAgICAgIEBjcnVtYi5sYXN0Q2hpbGQucmVtb3ZlKClcbiAgICAgICAgICAgICAgICBAY3J1bWIuZmlyc3RDaGlsZC5yZW1vdmUoKVxuICAgIFxuICAgIG9uTW91c2VEb3duOiAoZXZlbnQpID0+XG4gICAgICAgIFxuICAgICAgICBAZG93blBvcyA9IGtwb3Mgd2luZG93Lndpbi5nZXRCb3VuZHMoKVxuICAgICAgICAgICAgXG4gICAgb25Nb3VzZVVwOiAoZXZlbnQpID0+XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gaWYgbm90IEBkb3duUG9zXG4gICAgICAgIFxuICAgICAgICB1cFBvcyA9IGtwb3Mgd2luZG93Lndpbi5nZXRCb3VuZHMoKVxuICAgICAgICBcbiAgICAgICAgaWYgdXBQb3MudG8oQGRvd25Qb3MpLmxlbmd0aCgpID4gMFxuICAgICAgICAgICAgZGVsZXRlIEBkb3duUG9zXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgXG4gICAgICAgIGlmIGV2ZW50LnRhcmdldC5pZFxuICAgICAgICAgICAgQGJyb3dzZXIuYnJvd3NlIGV2ZW50LnRhcmdldC5pZFxuICAgICAgICBlbHNlXG4gICAgICAgICAgICByb290ID0gQGNydW1iLmZpcnN0Q2hpbGRcbiAgICAgICAgICAgIGJyID0gcm9vdC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgICAgICAgICAgaWYga3BvcyhldmVudCkueCA8IGJyLmxlZnRcbiAgICAgICAgICAgICAgICBAYnJvd3Nlci5icm93c2Ugcm9vdC5pZFxuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIEBicm93c2VyLmJyb3dzZSBAZmlsZVxuICAgICAgICAgICAgXG4gICAgICAgIGRlbGV0ZSBAZG93blBvc1xuICAgICAgICBcbiAgICBzZXRGaWxlOiAoQGZpbGUpIC0+XG4gICAgICAgIFxuICAgICAgICBAY3J1bWIuaW5uZXJIVE1MID0gRmlsZS5jcnVtYlNwYW4gc2xhc2gudGlsZGUgQGZpbGVcbiAgICAgICAgICAgIFxubW9kdWxlLmV4cG9ydHMgPSBIZWFkZXJcbiJdfQ==
//# sourceURL=../coffee/header.coffee